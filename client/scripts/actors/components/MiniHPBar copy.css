using Godot;

class MiniHPBar : IComponent
{
  static Theme ThemeProgressBar = ResourceLoader.Load<Theme>("res://components/theme/health.tres");

  ProgressBar hpBar;

  SubViewport view;

  Sprite3D HP;

  public MiniHPBar(CharacterActor actor)
  {
    Node node = new Node();

    actor.AddChild(node);

    view = new SubViewport();
    view.Size = new Vector2I(50, 5);

    hpBar = new ProgressBar();
    hpBar.CustomMinimumSize = new Vector2I(50, 5);
    hpBar.Theme = ThemeProgressBar;

    view.AddChild(hpBar);
    
    node.AddChild(view);

    HP = new Sprite3D();

    node.AddChild(HP);

    HP.Billboard = BaseMaterial3D.BillboardModeEnum.Enabled;
    HP.Transparent = true;
    HP.NoDepthTest = true;
    HP.Centered = true;

    actor.HealthStatusChanged += HealthChanged;
    actor.TakeDamage += TakeDamage;

    
  }

  void AddTexture()
  {
    var viewportTexture = new ViewportTexture();
    viewportTexture.ViewportPath = view.GetPath();

    HP.Texture = viewportTexture;
  }

  void HealthChanged(int currentHP, int maxHP, int currentSP, int maxSP)
  {
    hpBar.Value = currentHP;
    hpBar.MaxValue = maxHP;
  }

  void TakeDamage(int damage, int currentHP, int maxHP)
  {
    GD.Print(hpBar.Value);

    hpBar.Value = currentHP;
    HP.Visible = true;

    GD.Print("Took Damage");
  }

  public void InputHandler(InputEvent @event) { }

  public void Update(float delta) { }
}
